# MAPLEAF
# See SimDefinitionTemplate.mapleaf for file format info & description of all options

# This file is the base case for the OpenRocket 'SimpleRocket' validation cases

SimControl{
    timeDiscretization RK45Adaptive
    timeStep 0.01 #sec

    EndCondition Apogee
	#EndConditionValue	300

    loggingLevel    2
    RocketPlot      On

    plot    FlightAnimation CP CG AOA#FlightPaths Position Velocity Nosecone
}

Environment{
    ConstantMeanWind{
        velocity                    ( 3 0 0 ) #m/s
    }
	LaunchSite{
        elevation               0 #m, Relative to sea level - Impacts the acceleration of gravity at launch        

        # Lat / Lon only influence simulations using the 'Round' or 'WGS84' earth models
        latitude                49 # Degrees, 90 = North Pole, -90 = South Pole, 0 = Equator
        longitude               81 # Degrees, 0 = Prime Meridian (Greenwich, England), +'ve is East, -'ve is West

        # A launch rail will prevent the rocket from deviating from the direction specified by Rocket.initialDirection
            # Until it has travelled the length of the launch rail from its starting location
            # The launch rail will also prevent downwards motion
            # A length of 0 = no launch rail
        railLength              13.716 #m

		EarthModel                  Flat

    	#### Atmospheric Properties ####
    	# USStandardAtmosphere or Constant or TabulatedAtmosphere
        # USStandardAtmosphere computes the exact US Standard Atmosphere
    	AtmosphericPropertiesModel  USStandardAtmosphere
    }
}

Rocket{
	name				Ouroboros
	initialDirection	(0 0 1)
	position            (0 0 10) # m - initial position above ground level (AGL) of the rocket's CG. Set launch site elevation using Environment.LaunchSite.elevation
    velocity            (0 0 0) # m/s - initial velocity
    angularVelocity     (0 0 0) # rad/s - initial angular velocity - defined in the rocket's LOCAL frame

	Aero{
        # To turn off base drag (for comparisons to wind tunnel data), make sure the rocket doesn't include a Boat tail and set this to false
        addZeroLengthBoatTailsToAccountForBaseDrag      true
      
        # Calculates skin friction based on laminar + transitional flow if not fully turbulent
        fullyTurbulentBL                                true
    }

    FirstStage{
        class           Stage
		stageNumber		1
		position            (0 0 0) #m - Position of stage tip, relative to tip of rocket


        






NoseCone{
		baseDiameter			0.1524
		class			Nosecone
		cg			(0 0 -0.475)
		position	(0 0 0)
		mass			1.750866548
		aspectRatio		4.0015
		surfaceRoughness	0.00006
		shape		tangentOgive #need to confirm
	}

NoseConeTube{
	class	Bodytube
	mass	0.2
	length			0.2158746
	cg			(0 0 -0.1079373)
	position	(0 0 -0.6098286)
	outerDiameter		0.1524
	surfaceRoughness	0.00006

}

RecoverySystem{
		class			RecoverySystem
		mass			1.995806428
		position		(0 0 -1.2)
		cg				(0 0 -0.1)
		numStages 		1
		stage1Trigger       Apogee # Apogee, Time, Altitude
        stage1ChuteArea     2 # m^2
        stage1Cd            1.5 # Drag Coefficient (~0.75-0.8 for flat sheet, 1.5-1.75 for domed chute)
        stage1DelayTime     2 #s

	}

Chutes{
		class			Mass
		mass			1.197483857
		position		(0 0 -1.2)
		cg				(0 0 -0.1) #chutes are given the exact same location and cg as recovery system
		MOI				(0.00567557453 0.00567557453 0.003367923348)#each mass component is modeled as a solid cylinder with diam 0.15m and length 0.2m
	}





RecoveryTube{
		length			0.6096
		class			Bodytube
		cg			(0 0 -0.30525)
		position	(0 0 -0.8257032)
		mass			0.997903214
		outerDiameter		0.1524
		surfaceRoughness	0.00006
	}





AvionicsTube{
		length			0.6096
		class			Bodytube
		cg				(0 0 -0.2391664)
		position		(0 0 -1.4353032)
		mass			0.997903214
		outerDiameter	0.1524
		surfaceRoughness	0.00006
	}

Avionics{
		class			Mass
		mass			2.494758035
		position		(0 0 -2.1) # positioned so cg avionics roughly aligns with cg of avionics tube
		cg				(0 0 -0.1)
		MOI				(0.0118241136 0.0118241136 0.007016506973)
	}

Payload{
		class			Mass
		mass			3.991612856
		position		(0 0 -2.1)#-0.5375146
		cg				(0 0 -0.1)
		MOI				(0.01891858177 0.01891858177 0.01122641116)
	}

DiameterChange1{
            class           Transition
            mass            0.1114 #confirm
            position        (0 0 -2.0449032) # Position of top, center of diameter change
            cg              (0 0 -0.0396748)
            MOI             (0.01 0.01 0.0001) # need to ask

            length          0.057277 # m
            startDiameter   0.1524 # m, Diameter at top
            endDiameter     0.142875 # m, Diameter at bottom
            surfaceRoughness 0.000060 # m
        }




PressureVessel{
		length			1.07188
		class			Bodytube
		cg			(0 0 -0.559308)
		position	(0 0 -2.1021802)
		mass			28.37220274
		outerDiameter		0.142875
		surfaceRoughness	0.00006
	}



#measure for these values
DiameterChange2{
            class           Transition
            mass            0.1114 #confirm
            position        (0 0 -3.1740602) # Position of top, center of diameter change
            cg              (0 0 -0.0396748)
            MOI             (0.01 0.01 0.0001) # need to ask

            length          0.057277 # m
            startDiameter   0.142875 # m, Diameter at top
            endDiameter     0.172593 # m, Diameter at bottom
            surfaceRoughness 0.000060 # m
        }

FinCan{
		class		Bodytube
		length		0.85852
		cg			(0 0 -0.4328668)
		MOI			(0.0239 0.2167 0.2167)
		position	(0 0 -3.2313372)
		mass		2.5
		outerDiameter	0.1726184
		surfaceRoughness	0.00006
}




Fins{
		class			FinSet
		cg			(0 0 -0.2)
		MOI			(0.1368 0.4287 0.4287)
		position	(0 0 -3.6928572)
		mass			0.2
        numFins           3
        finCantAngle      0 # Positive values will induce moments in (local frame) negZ direction. Negative values will induce moments in the (local frame) posZ direction
        firstFinAngle     0 # deg (Must be between 0 and 90) -  controls circumferential location of fins. 0 will have the first fin spanwise direction aligned with the local X-axis
                              # Rest of the fins will be spaced evenly around the rocket
                                
        # Planform
        sweepAngle        28 # deg - leading edge sweep angle. 0 = leading edge normal to rocket surface, 90 = no fin at all.
        rootChord         0.381 # m
        tipChord          0.178 # m - it is assumed that the tip chord is parallel to the root chord
        span              0.1862 # m - radial (from the perspective of the rocket) distance between fin root and fin tip

        # Other
        thickness         0.009906 # m - Maximum fin thickness
        surfaceRoughness  0.000060 # m

        #numFinSpanSlicesForIntegration  10 # Use this to override the number of fin span slices used to integrate normal forces produced by the fin
            
        LeadingEdge{
            shape         Round # Blunt or Round (Even sharp edges always have a small radius)
            #thickness     0.00931 # Used for 'Blunt' edge
            radius        0.00211 # Used for 'Round' edge
        }

        TrailingEdge{
            shape         Round # Tapered (0 base drag), Round (1/2 base drag), Blunt (full base drag)
            #thickness     0.001 # Used for 'Blunt' edge
            radius        0.00211 # Used for 'Round' edge
        }
	}

Motor{
            class           Motor
            path            C:\Users\zackg\Documents\Coding\MAPLEAF-master\MAPLEAF\Examples\Motors\test.txt

            # To add uncertainty to the Motor's total impulse and burn time in Monte Carlo simulations
            # For both of the adjustment factors below: 1.0 = no effect, 1.10 = +10%, etc. 
            #impulseAdjustFactor           1.0 # Thrust curve multiplied by given factor. Does not affect burn time.
            #impulseAdjustFactor_stdDev    0.02331 # Sample value for Estes B4: http://nar.org/SandT/pdf/Estes/B4.pdf
            
            #burnTimeAdjustFactor          1.0 # Burn time multiplied by given factor, thrust produced at each time divided by it. Does not affect total impulse.
            #burnTimeAdjustFactor_stdDev   0.10679 # Sample value for Estes B4: http://nar.org/SandT/pdf/Estes/B4.pdf
        }
  }
}